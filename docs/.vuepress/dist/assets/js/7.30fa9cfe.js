(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{62:function(t,s,a){"use strict";a.r(s);var e=a(0),n=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"a-logb-standard-felepitese"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#a-logb-standard-felepitese","aria-hidden":"true"}},[t._v("#")]),t._v(" A LogB standard felépítése")]),t._v(" "),a("p",[t._v("Jelenleg egy standardon dolgozunk, amivel meg lehet pontosan határozni a mérőeszközök felépítését.")]),t._v(" "),a("h2",{attrs:{id:"bemenetek-szenzorok"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bemenetek-szenzorok","aria-hidden":"true"}},[t._v("#")]),t._v(" Bemenetek/szenzorok")]),t._v(" "),a("h3",{attrs:{id:"mi-lehet-bemenet"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mi-lehet-bemenet","aria-hidden":"true"}},[t._v("#")]),t._v(" Mi lehet bemenet?")]),t._v(" "),a("p",[t._v("Szinte bármi."),a("br"),t._v("\nEgy LogB kompatibilis bemenetnek szolgáltatnia kell minimum egy, az Arduino kódban meghívható függvényt, aminek visszatérő értéke String-ben tárolható")]),t._v(" "),a("h3",{attrs:{id:"szenzorok-konyvtarai"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#szenzorok-konyvtarai","aria-hidden":"true"}},[t._v("#")]),t._v(" Szenzorok könyvtárai")]),t._v(" "),a("p",[t._v("Arduino-s szenzorok könyvtárai egymáshoz hasonló adatformában adják ki most is az adatokat, nekünk viszont pontosan meg kell határozni, hogy milyen adat érkezhet a LogB-be, a modularitás megőrzése érdekében.")]),t._v(" "),a("h3",{attrs:{id:"pontos-szenzor-definiciok"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pontos-szenzor-definiciok","aria-hidden":"true"}},[t._v("#")]),t._v(" Pontos szenzor-definíciók")]),t._v(" "),a("p",[t._v("A szenzor összes (mérésnél illetve a hardver beépítésénél) fontos tulajdonságát meghatározzuk:")]),t._v(" "),a("ul",[a("li",[t._v("Név")]),t._v(" "),a("li",[t._v("Feszültség")]),t._v(" "),a("li",[t._v("Kapcsolódás\n"),a("ul",[a("li",[t._v("Típusa")]),t._v(" "),a("li",[t._v("címe (opcionális)")])])]),t._v(" "),a("li",[t._v("Mérés\n"),a("ul",[a("li",[t._v("Mértékegység (opcionális)")]),t._v(" "),a("li",[t._v("Változó típusa")])])])]),t._v(" "),a("p",[t._v("Egy példa:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"SHT21"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"voltage"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3v3"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"connection"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"I2C"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"address"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0x40"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"meas"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"temp"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"unit"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"C"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"float"')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"hum"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"unit"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"RH%"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"float"')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("div",{staticClass:"warning custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("Fontos")]),t._v(" "),a("p",[t._v("A mértékegységeket a szenzor könyvtára határozza meg. A nyers adatok módosítása máshol történik.")])]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("Több azonos szenzor")]),t._v(" "),a("p",[t._v("Több azonos I2C című egységnél I2C multiplexer-re van szükség.")])]),t._v(" "),a("p",[t._v("A példánál maradva azt a szenzort, amely:")]),t._v(" "),a("ul",[a("li",[t._v("Modellje SHT21")]),t._v(" "),a("li",[t._v("3.3 volton működik")]),t._v(" "),a("li",[t._v("I2C-n csatlakozik")]),t._v(" "),a("li",[t._v("Mérés\n"),a("ul",[a("li",[t._v("Mértékegység")]),t._v(" "),a("li",[t._v("Változó típusa")])])])])])}],!1,null,null,null);s.default=n.exports}}]);